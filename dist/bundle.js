var pict2pix;(()=>{"use strict";var t={d:(a,i)=>{for(var e in i)t.o(i,e)&&!t.o(a,e)&&Object.defineProperty(a,e,{enumerable:!0,get:i[e]})},o:(t,a)=>Object.prototype.hasOwnProperty.call(t,a),r:t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}},a={};t.r(a),t.d(a,{animate:()=>s});class i{static mappedImage;constructor(t,a){this.maxWidth=t,this.maxHeight=a,this.x=Math.random()*this.maxWidth,this.y=Math.random()*this.maxHeight,this.speed=0,this.size=2*Math.random()+.2,this.color}update(t){let a=Math.floor(this.y),e=Math.floor(this.x);a<this.maxHeight&&e<this.maxWidth?(this.speed=i.mappedImage[a][e][0],this.color=i.mappedImage[a][e][1]):(console.log("y int: "+a+" - x int: "+e),console.log("x int: "+e+" - x float"+this.x)),this.y+=(3-this.speed)*t*.03,this.y>=this.maxHeight&&(this.y=0,this.x=Math.random()*this.maxWidth)}draw(t){t.beginPath(),t.globalAlpha=1,t.fillStyle=this.color,t.strokeStyle=this.color,t.arc(this.x,this.y,this.size,0,2*Math.PI),t.fill()}}class e{#canvas;#ctx;#lastTime=0;#deltaTime=0;#particlesArray=[];#numberOfParticles=3e3;#mappedImage=[];constructor(t){this.#numberOfParticles=t.numberOfParticles||3e3,this.#canvas=document.createElement("canvas"),this.#canvas.width=t.image.width||t.image.naturalWidth,this.#canvas.height=t.image.height||t.image.naturalHeight,image.parentNode.replaceChild(this.#canvas,t.image),this.#ctx=this.#canvas.getContext("2d"),this.#ctx.drawImage(t.image,0,0,this.#canvas.width,this.#canvas.height);const a=this.#ctx.getImageData(0,0,this.#canvas.width,this.#canvas.height);this.#ctx.clearRect(0,0,this.#canvas.width,this.#canvas.height),this.mapImage(a),requestAnimationFrame(this.loop.bind(this)),i.mappedImage=this.#mappedImage;for(let t=0;t<this.#numberOfParticles;t++)this.#particlesArray.push(new i(this.#canvas.width,this.#canvas.height))}mapImage(t){let a=654654,i=-654654;for(let e=0;e<this.#canvas.height;e++){let s=[];for(let h=0;h<this.#canvas.width;h++){const r=t.data[4*e*t.width+4*h],l=t.data[4*e*t.width+(4*h+1)],c=t.data[4*e*t.width+(4*h+2)],n=this.calculateRelativeBrightness(r,l,c);n<a&&(a=n),n>i&&(i=n);const o=[n,"rgb("+r+","+l+","+c+")"];s.push(o)}this.#mappedImage.push(s)}console.log("max: "+i+" - min: "+a)}calculateRelativeBrightness(t,a,i){return Math.sqrt(t*t*.299+a*a*.587+i*i*.114)/100}update(t){for(let a=0;a<this.#particlesArray.length;a++)this.#particlesArray[a].update(t)}draw(){this.#ctx.globalAlpha=.01,this.#ctx.fillStyle="rgb(0, 0, 0)",this.#ctx.fillRect(0,0,this.#canvas.width,this.#canvas.height);for(let t=0;t<this.#particlesArray.length;t++)this.#particlesArray[t].draw(this.#ctx)}loop(t){this.#deltaTime=t-this.#lastTime,this.#lastTime=t,this.update(this.#deltaTime),this.draw(),requestAnimationFrame(this.loop.bind(this))}}function s(t){return new e(t)}pict2pix=a})();