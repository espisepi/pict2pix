var pict2pix;(()=>{"use strict";var t={d:(i,e)=>{for(var s in e)t.o(e,s)&&!t.o(i,s)&&Object.defineProperty(i,s,{enumerable:!0,get:e[s]})},o:(t,i)=>Object.prototype.hasOwnProperty.call(t,i),r:t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}},i={};t.r(i),t.d(i,{animate:()=>x,stop:()=>T});class e{#config;#x;#y;#originalX;#originalY;#fromX;#fromY;#toX;#toY;#color;#dx;#dy;#transitionTime;#realTransitionTime;#radio;constructor(t,i){this.#config=t,this.#x=0,this.#y=0,this.#originalX=i.x,this.#originalY=i.y,this.setFromOrigin(),this.setToOrigin(),this.#color=i.color,this.#radio=i.ledSize/2}#calculateDistance(){this.#dx=this.#toX-this.#fromX,this.#dy=this.#toY-this.#fromY}setTransitionTime(t){this.#transitionTime=t;const i=Math.floor(this.#transitionTime-this.#transitionTime/10),e=Math.floor(this.#transitionTime/2);this.#realTransitionTime=Math.floor(Math.random()*(i-e)+e)}setFrom(t,i){this.#fromX=t,this.#fromY=i,this.#calculateDistance()}setTo(t,i){this.#toX=t,this.#toY=i,this.#calculateDistance()}setFromPos(){this.#fromX=this.#x,this.#fromY=this.#y,this.#calculateDistance()}setFromOrigin(){this.#fromX=this.#originalX,this.#fromY=this.#originalY,this.#calculateDistance()}setToOrigin(){this.#toX=this.#originalX,this.#toY=this.#originalY,this.#calculateDistance()}setPos(t,i){this.#x=t,this.#y=i}getX(){return this.#x}getY(){return this.#y}getOriginalX(){return this.#originalX}getOriginalY(){return this.#originalY}getTargetX(){return this.#toX}getTargetY(){return this.#toY}update(t){const i=t/this.#realTransitionTime;t<=this.#realTransitionTime?(this.#x=this.#dx*i+this.#fromX,this.#y=this.#dy*i+this.#fromY):(this.#x=this.#toX,this.#y=this.#toY)}draw(t){t.beginPath(),t.arc(this.#x,this.#y,this.#radio,0,2*Math.PI),t.closePath(),t.fillStyle=this.#color,t.fill()}}class s extends class{config;constructor(t){this.config=t}update(t){}draw(t){}}{constructor(t){super(t),this.x=Math.random()*this.config.maxWidth,this.y=Math.random()*this.config.maxHeight,this.speed=0,this.size=2*Math.random()+.2,this.color}update(t){this.y+=(3-this.speed)*t*.03*this.config.verticalSpeed,this.x+=(3-this.speed)*t*.03*this.config.horizontalSpeed,this.y>=this.config.maxHeight&&this.config.verticalSpeed>0&&(this.y=0,this.x=Math.random()*this.config.maxWidth),this.y<0&&this.config.verticalSpeed<0&&(this.y=this.config.maxHeight-1,this.x=Math.random()*this.config.maxWidth),this.x>=this.config.maxWidth&&this.config.horizontalSpeed>0&&(this.x=0,this.y=Math.random()*this.config.maxHeight),this.x<0&&this.config.horizontalSpeed<0&&(this.x=this.config.maxWidth-1,this.y=Math.random()*this.config.maxHeight);let i=Math.floor(this.y),e=Math.floor(this.x);i>=0&&i<this.config.maxHeight&&e>=0&&e<this.config.maxWidth&&(this.speed=this.config.mappedImage[i][e][0],this.color=this.config.mappedImage[i][e][1])}draw(t){t.beginPath(),t.globalAlpha=1,t.fillStyle=this.color,t.strokeStyle=this.color,t.arc(this.x,this.y,this.size,0,2*Math.PI),t.fill()}}class a extends s{#angle=0;constructor(t){super(t)}update(t){super.update(t),this.#angle+=this.speed/20,this.y+=Math.sin(this.#angle),this.x+=Math.cos(this.#angle)}}class r{static#particles={"straight-particle":t=>new s(t),"twisted-particle":t=>new a(t),"led-matrix":(t,i)=>new e(t,i)};static createParticle(t,i){return this.#particles[t.particleType]?.(t,i)??new s}}class h{#config;#particlesArray=[];constructor(t){this.#config=t;let i=document.createElement("canvas");i.width=this.#config.image.width,i.height=this.#config.image.height;let e=i.getContext("2d");e.drawImage(this.#config.image,0,0,this.#config.image.width,this.#config.image.height);const s=e.getImageData(0,0,this.#config.image.width,this.#config.image.height);this.#config.numberOfParticles=this.#config.numberOfParticles||3e3,this.#config.maxWidth=this.#config.image.width,this.#config.maxHeight=this.#config.image.height,this.#config.mappedImage=this.mapImage(s),this.#config.verticalSpeed=t.verticalSpeed??1,this.#config.horizontalSpeed=t.horizontalSpeed??1;for(let i=0;i<this.#config.numberOfParticles;i++)this.#particlesArray.push(r.createParticle(t))}update(t){for(let i=0;i<this.#particlesArray.length;i++)this.#particlesArray[i].update(t)}draw(t){t.globalAlpha=.01,t.fillStyle="rgb(0, 0, 0)",t.fillRect(0,0,this.#config.maxWidth,this.#config.maxHeight);for(let i=0;i<this.#particlesArray.length;i++)this.#particlesArray[i].draw(t)}mapImage(t){let i=[];for(let e=0;e<this.#config.maxHeight;e++){let s=[];for(let i=0;i<this.#config.maxWidth;i++){const a=t.data[4*e*t.width+4*i],r=t.data[4*e*t.width+(4*i+1)],h=t.data[4*e*t.width+(4*i+2)],n=[this.calculateRelativeBrightness(a,r,h),"rgb("+a+","+r+","+h+")"];s.push(n)}i.push(s)}return i}calculateRelativeBrightness(t,i,e){return Math.sqrt(t*t*.299+i*i*.587+e*e*.114)/100}}class n{ledMatrixEffect;setLedMatrixEffect(t){this.ledMatrixEffect=t}update(t){}setLedMatrixEffect(t){this.ledMatrixEffect=t}}class c extends n{#config;#particlesArray;#accumulatedTime=0;constructor(t,i){super(),this.#config=t,this.#particlesArray=i;const e=Math.random()*this.#config.maxWidth,s=Math.random()*this.#config.maxHeight;for(let t=0;t<this.#particlesArray.length;t++)this.#particlesArray[t].setTransitionTime(this.#config.transitionTime),this.#particlesArray[t].setFromPos(),this.#particlesArray[t].setTo(e,s)}update(t){if(this.#accumulatedTime+=t,this.#accumulatedTime>this.#config.transitionTime)this.ledMatrixEffect.setState(m.createLedMatrixState("returning",this.#config,this.#particlesArray));else for(let t=0;t<this.#particlesArray.length;t++)this.#particlesArray[t].update(this.#accumulatedTime,this.#config.transitionTime)}}class o extends n{#config;#particlesArray;#accumulatedTime=0;constructor(t,i){super(),this.#config=t,this.#particlesArray=i;const e=-1*this.#config.ledSize/2;for(let t=0;t<this.#particlesArray.length;t++)this.#particlesArray[t].setTransitionTime(this.#config.transitionTime),this.#particlesArray[t].setFromPos(),this.#particlesArray[t].setTo(this.#particlesArray[t].getOriginalX(),e)}update(t){if(this.#accumulatedTime+=t,this.#accumulatedTime>this.#config.transitionTime){for(let t=0;t<this.#particlesArray.length;t++)this.#particlesArray[t].setPos(this.#particlesArray[t].getOriginalX(),this.#config.maxHeight-1);this.ledMatrixEffect.setState(m.createLedMatrixState("returning",this.#config,this.#particlesArray))}else for(let t=0;t<this.#particlesArray.length;t++)this.#particlesArray[t].update(this.#accumulatedTime,this.#config.transitionTime)}}class l extends n{#config;#particlesArray;#accumulatedTime=0;constructor(t,i){super(),this.#config=t,this.#particlesArray=i;const e=-1*this.#config.ledSize/2;for(let t=0;t<this.#particlesArray.length;t++)this.#particlesArray[t].setTransitionTime(this.#config.transitionTime),this.#particlesArray[t].setFromPos(),this.#particlesArray[t].setTo(e,this.#particlesArray[t].getOriginalY())}update(t){if(this.#accumulatedTime+=t,this.#accumulatedTime>this.#config.transitionTime){for(let t=0;t<this.#particlesArray.length;t++)this.#particlesArray[t].setPos(this.#config.maxWidth-1,this.#particlesArray[t].getOriginalY());this.ledMatrixEffect.setState(m.createLedMatrixState("returning",this.#config,this.#particlesArray))}else for(let t=0;t<this.#particlesArray.length;t++)this.#particlesArray[t].update(this.#accumulatedTime,this.#config.transitionTime)}}class g extends n{#config;#particlesArray;#accumulatedTime=0;constructor(t,i){super(),this.#config=t,this.#particlesArray=i;for(let t=0;t<this.#particlesArray.length;t++)this.#particlesArray[t].setTransitionTime(this.#config.transitionTime),this.#particlesArray[t].setFromPos(),this.#particlesArray[t].setToOrigin()}update(t){if(this.#accumulatedTime+=t,this.#accumulatedTime>this.#config.transitionTime)this.ledMatrixEffect.setState(m.createLedMatrixState("idle",this.#config,this.#particlesArray));else for(let t=0;t<this.#particlesArray.length;t++)this.#particlesArray[t].update(this.#accumulatedTime,this.#config.transitionTime)}}class d extends n{#accumulatedTime=0;#config;#particlesArray;constructor(t,i){super(),this.#config=t,this.#particlesArray=i}update(t){this.#accumulatedTime+=t,this.#accumulatedTime>this.#config.idleTime&&this.ledMatrixEffect.setState(m.createLedMatrixState(this.#config.type,this.#config,this.#particlesArray))}}class m{static#states={point:(t,i)=>new c(t,i),horizontal:(t,i)=>new o(t,i),vertical:(t,i)=>new l(t,i),returning:(t,i)=>new g(t,i),idle:(t,i)=>new d(t,i)};static createLedMatrixState(t,i,e){let s;return s="random"===t?m.getRandomState():t,m.#states[s]?.(i,e)??new c(i,e)}static getRandomState(){const t=Math.floor(3*Math.random());return Object.keys(m.#states)[t]}}class f{#config;#particlesArray=[];#state;constructor(t){this.#config=t,this.#config.maxWidth=this.#config.image.width,this.#config.maxHeight=this.#config.image.height,this.#config.transitionTime=t.transitionTime??2e3,this.#config.idleTime=t.idleTime??5e3,this.#config.ledSize=t.ledSize&&t.ledSize>=4?t.ledSize:4;const i=this.reduceImage(this.#config.image);this.createParticlesFromImage(i,t),this.setState(m.createLedMatrixState("returning",this.#config,this.#particlesArray))}setState(t){this.#state=t,this.#state.setLedMatrixEffect(this)}createParticlesFromImage(t,i){const e=this.#config.ledSize/4,s=this.#config.ledSize/2;for(var a=0;a<t.height;a++){const n=4*a,c=n*t.width;for(var h=0;h<t.width;h++){const a=4*h;if(t.data[c+a+3]>128){let h="rgb("+t.data[c+a]+","+t.data[c+a+1]+","+t.data[c+a+2]+")",o=r.createParticle(i,{x:a*e+s,y:n*e+s,color:h,ledSize:this.#config.ledSize});this.#particlesArray.push(o)}}}}reduceImage(t){const i=document.createElement("canvas"),e=t.width/this.#config.ledSize,s=t.height/this.#config.ledSize;i.width=e,i.height=s;const a=i.getContext("2d");return a.drawImage(t,0,0,e,s),a.getImageData(0,0,e,s)}update(t){this.#state.update(t)}draw(t){t.clearRect(0,0,this.#config.maxWidth,this.#config.maxHeight);for(let i=0;i<this.#particlesArray.length;i++)this.#particlesArray[i].draw(t)}}class p{static#effects={"straight-particle":t=>new h(t),"twisted-particle":t=>new h(t),"led-matrix":t=>new f(t)};static createParticle(t){return this.#effects[t.particleType]?.(t)??new h(t)}}class u{#canvas;#ctx;#reqAnim;#lastTime=0;#deltaTime=0;#effect;#config;running=!1;constructor(t){this.#config=t,this.#canvas=document.createElement("canvas"),this.#canvas.width=this.#config.image.width||this.#config.image.naturalWidth,this.#canvas.height=this.#config.image.height||this.#config.image.naturalHeight,this.#ctx=this.#canvas.getContext("2d"),this.#effect=p.createParticle(t)}update(t){this.#effect.update(t)}draw(){this.#effect.draw(this.#ctx)}start(){this.running||(this.#lastTime=0,this.#config.image.style.display="none",this.#config.image.parentNode.insertBefore(this.#canvas,this.#config.image),this.#reqAnim=requestAnimationFrame(this.loop.bind(this)),this.running=!0)}stop(){this.running&&(this.#config.image.style.display="initial",this.#config.image.parentNode.removeChild(this.#canvas),window.cancelAnimationFrame(this.#reqAnim),this.running=!1)}loop(t){this.#lastTime||(this.#lastTime=t),this.#deltaTime=t-this.#lastTime,this.#lastTime=t,this.update(this.#deltaTime),this.draw(),this.#reqAnim=requestAnimationFrame(this.loop.bind(this))}}var y={};function x(t){y[t.image.id]||(y[t.image.id]={pict2pix:new u(t),running:!0}),y[t.image.id].running=!0,y[t.image.id].pict2pix.start()}function T(t){y[t].running=!1,y[t].pict2pix.stop()}document.addEventListener("visibilitychange",(function(){"hidden"===document.visibilityState?function(){for(var t in y)y[t].running&&y[t].pict2pix.stop()}():function(){for(var t in y)y[t].running&&y[t].pict2pix.start()}()}),!1),pict2pix=i})();